// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tienda.Servicio.Infraesctructura;

namespace Servicio.WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201029000726_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.Cita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnName("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrdenServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrdenServicioId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.CitaTecnico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHoraCita")
                        .HasColumnName("fechaHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TecnicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("CitaTecnicos");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("clienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.DetalleCita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.ToTable("DetalleCitas");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.DetalleServicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrdenServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fechaDetalle")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrdenServicioId");

                    b.ToTable("DetalleServicios");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.FormularioTrabajo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Informe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedidaAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.ToTable("FormularioTrabajos");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.OrdenServicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaConsolidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("ordenServicioId");

                    b.HasIndex("ClienteId");

                    b.ToTable("OrdenServicios");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.Tecnico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("tecnicoId");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.Cita", b =>
                {
                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.OrdenServicio", "OrdenServicio")
                        .WithMany()
                        .HasForeignKey("OrdenServicioId");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.CitaTecnico", b =>
                {
                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId");

                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.Cliente", b =>
                {
                    b.OwnsOne("Tienda.SharedKernel.ValueObjects.PersonNameValue", "NombreCliente", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("nombreCliente")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("Tienda.SharedKernel.ValueObjects.PhoneNumber.PhoneNumberValue", "Telefono", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("telefono")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.DetalleCita", b =>
                {
                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.DetalleServicio", b =>
                {
                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.OrdenServicio", "OrdenServicio")
                        .WithMany()
                        .HasForeignKey("OrdenServicioId");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.FormularioTrabajo", b =>
                {
                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId");
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.OrdenServicio", b =>
                {
                    b.HasOne("Tienda.Servicio.Domain.Model.Servicio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.OwnsOne("Tienda.SharedKernel.ValueObjects.PrecioNumber.PrecioNumberValue", "Precio", b1 =>
                        {
                            b1.Property<Guid>("OrdenServicioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("precio")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrdenServicioId");

                            b1.ToTable("OrdenServicios");

                            b1.WithOwner()
                                .HasForeignKey("OrdenServicioId");
                        });
                });

            modelBuilder.Entity("Tienda.Servicio.Domain.Model.Servicio.Tecnico", b =>
                {
                    b.OwnsOne("Tienda.SharedKernel.ValueObjects.PersonNameTecnicoValue", "NombreTecnico", b1 =>
                        {
                            b1.Property<Guid>("TecnicoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("nombreTecnico")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TecnicoId");

                            b1.ToTable("Tecnicos");

                            b1.WithOwner()
                                .HasForeignKey("TecnicoId");
                        });

                    b.OwnsOne("Tienda.SharedKernel.ValueObjects.PhoneNumber.PhoneNumberTecnicoValue", "Telefono", b1 =>
                        {
                            b1.Property<Guid>("TecnicoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("telefono")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TecnicoId");

                            b1.ToTable("Tecnicos");

                            b1.WithOwner()
                                .HasForeignKey("TecnicoId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
